[{"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\index.js":"1","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\App.js":"2","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\header.js":"4","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\footer.js":"5","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Product.js":"7","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\productCarousal.js":"10","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\CartScreen.js":"11","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\store.js":"12","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reducers\\productReducer.js":"13","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\constants\\productConstants.js":"14","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\loader.js":"15","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Loader.js":"16","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Message.js":"17","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reducers\\cartReducer.js":"19","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\actions\\cartActions.js":"20","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reducers\\userReducer.js":"21","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\LoginScreen.js":"23","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\FormContainer.js":"24","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Header.js":"25","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Footer.js":"26","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\RegisterScreen.js":"27","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ProfileScreen.js":"28","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ShippingScreen.js":"29","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\CheckoutSteps.js":"30","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\PaymentScreen.js":"31","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\PlaceOrderScreen.js":"32","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reducers\\orderReducer.js":"33","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\constants\\orderContants.js":"34","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\actions\\userActions.js":"35","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\actions\\productActions.js":"36","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\actions\\orderActions.js":"37","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\OrderScreen.js":"38","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\UserListScreen.js":"39","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ProductListScreen.js":"40","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\OrderListScreen.js":"41","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\UserEditScreen.js":"42","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ProductEditScreen.js":"43"},{"size":385,"mtime":1622388000448,"results":"44","hashOfConfig":"45"},{"size":2256,"mtime":1624260565502,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":1797,"mtime":1622917006046,"results":"48","hashOfConfig":"45"},{"size":433,"mtime":1622916669813,"results":"49","hashOfConfig":"45"},{"size":1055,"mtime":1622988860363,"results":"50","hashOfConfig":"45"},{"size":840,"mtime":1622384563508,"results":"51","hashOfConfig":"45"},{"size":1849,"mtime":1624206122619,"results":"52","hashOfConfig":"45"},{"size":3859,"mtime":1624268419432,"results":"53","hashOfConfig":"45"},{"size":0,"mtime":1612087381060,"results":"54","hashOfConfig":"45"},{"size":3667,"mtime":1623514661157,"results":"55","hashOfConfig":"45"},{"size":2141,"mtime":1624261501370,"results":"56","hashOfConfig":"45"},{"size":2606,"mtime":1624261465118,"results":"57","hashOfConfig":"45"},{"size":1069,"mtime":1624262726066,"results":"58","hashOfConfig":"45"},{"size":407,"mtime":1622572848612,"results":"59","hashOfConfig":"45"},{"size":411,"mtime":1622615817397,"results":"60","hashOfConfig":"45"},{"size":254,"mtime":1622573034111,"results":"61","hashOfConfig":"45"},{"size":242,"mtime":1622979673776,"results":"62","hashOfConfig":"45"},{"size":1181,"mtime":1622979809105,"results":"63","hashOfConfig":"45"},{"size":1262,"mtime":1622979726263,"results":"64","hashOfConfig":"45"},{"size":3564,"mtime":1623741671712,"results":"65","hashOfConfig":"45"},{"size":1534,"mtime":1623596546784,"results":"66","hashOfConfig":"45"},{"size":2764,"mtime":1624213996085,"results":"67","hashOfConfig":"45"},{"size":330,"mtime":1622880134494,"results":"68","hashOfConfig":"45"},{"size":2434,"mtime":1623578062056,"results":"69","hashOfConfig":"45"},{"size":433,"mtime":1622916669813,"results":"70","hashOfConfig":"45"},{"size":3248,"mtime":1623524704501,"results":"71","hashOfConfig":"45"},{"size":5537,"mtime":1623656230085,"results":"72","hashOfConfig":"45"},{"size":2619,"mtime":1622974136014,"results":"73","hashOfConfig":"45"},{"size":1300,"mtime":1622974260247,"results":"74","hashOfConfig":"45"},{"size":1908,"mtime":1622989655959,"results":"75","hashOfConfig":"45"},{"size":5172,"mtime":1622992410958,"results":"76","hashOfConfig":"45"},{"size":2346,"mtime":1623515764253,"results":"77","hashOfConfig":"45"},{"size":780,"mtime":1623515665880,"results":"78","hashOfConfig":"45"},{"size":6276,"mtime":1623742284641,"results":"79","hashOfConfig":"45"},{"size":3682,"mtime":1624262119192,"results":"80","hashOfConfig":"45"},{"size":3429,"mtime":1624206421357,"results":"81","hashOfConfig":"45"},{"size":7261,"mtime":1623514119155,"results":"82","hashOfConfig":"45"},{"size":5904,"mtime":1623655828292,"results":"83","hashOfConfig":"45"},{"size":3828,"mtime":1624211692211,"results":"84","hashOfConfig":"45"},{"size":171,"mtime":1623578572663,"results":"85","hashOfConfig":"45"},{"size":3227,"mtime":1623742450913,"results":"86","hashOfConfig":"45"},{"size":6147,"mtime":1624267512159,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1eu5y8p",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\index.js",[],["181","182"],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\App.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\header.js",[],["183","184"],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\footer.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\productCarousal.js",[],["185","186"],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\store.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\loader.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ProfileScreen.js",["187"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions.js\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n// import { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userProfileUpdate);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const myOrderList = useSelector((state) => state.myOrderList);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = myOrderList;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" vairant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <td>ID</td>\r\n                <td>Date</td>\r\n                <td>Total</td>\r\n                <td>Paid</td>\r\n                <td>Delivered</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={orders._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\",marginLeft: '2rem'}}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\", marginLeft: '2rem'}}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button variant=\"light\" size=\"sm\">Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\PlaceOrderScreen.js",["188"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from \"../components/Message\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: {cart.paymentMethod}</strong>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                    onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\constants\\orderContants.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\OrderScreen.js",["189"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderContants\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      // dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order ID {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {/* {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )} */}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ProductListScreen.js",["190"],"import React, { useEffect } from \"react\";\r\nimport { Button, Table, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo && userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate]);\r\n\r\n  const deleteproductHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped hover bordered responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>${product.price}</td>\r\n                <td>{product.category}</td>\r\n                <td>{product.brand}</td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => {\r\n                      deleteproductHandler(product._id);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\ProShop\\frontend\\src\\screens\\ProductEditScreen.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"191","replacedBy":"195"},{"ruleId":"193","replacedBy":"196"},{"ruleId":"191","replacedBy":"197"},{"ruleId":"193","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":44,"column":6,"nodeType":"201","endLine":44,"endColumn":31,"suggestions":"202"},{"ruleId":"199","severity":1,"message":"203","line":37,"column":6,"nodeType":"201","endLine":37,"endColumn":24,"suggestions":"204"},{"ruleId":"199","severity":1,"message":"205","line":66,"column":6,"nodeType":"201","endLine":66,"endColumn":44,"suggestions":"206"},{"ruleId":"199","severity":1,"message":"207","line":49,"column":6,"nodeType":"201","endLine":49,"endColumn":65,"suggestions":"208"},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],["209"],["210"],["209"],["210"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'createdProduct._id'. Either include it or remove the dependency array.",["214"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [history, userInfo, user, dispatch]",{"range":"223","text":"224"},"Update the dependencies array to be: [history, order._id, success]",{"range":"225","text":"226"},"Update the dependencies array to be: [dispatch, orderId, successPay, order, userInfo, history]",{"range":"227","text":"228"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, successCreate, createdProduct._id]",{"range":"229","text":"230"},[1650,1675],"[history, userInfo, user, dispatch]",[1225,1243],"[history, order._id, success]",[2174,2212],"[dispatch, orderId, successPay, order, userInfo, history]",[1497,1556],"[dispatch, history, userInfo, successDelete, successCreate, createdProduct._id]"]